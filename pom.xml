<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-build</artifactId>
		<version>1.3.0.BUILD-SNAPSHOT</version>
		<relativePath/>
	</parent>

	<artifactId>spring-cloud-contract-raml</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0.BUILD-SNAPSHOT</version>

	<name>Spring Cloud Contract Spec For RAML</name>
	<description>Spring Cloud Contract Spec For RAML</description>

	<url>https://github.com/spring-cloud-incubator/spring-cloud-contract-raml</url>

	<inceptionYear>2017</inceptionYear>

	<properties>
		<spring-cloud-build.version>1.3.0.BUILD-SNAPSHOT</spring-cloud-build.version>
		<spring-boot.version>1.5.2.BUILD-SNAPSHOT</spring-boot.version>
		<checkstyle.version>2.17</checkstyle.version>
		<spring-cloud-contract.version>1.1.0.BUILD-SNAPSHOT</spring-cloud-contract.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.raml</groupId>
				<artifactId>raml-parser-2</artifactId>
				<version>1.0.6</version>
			</dependency>
			<dependency>
				<groupId>org.raml</groupId>
				<artifactId>com.mulesoft.jaxrs.raml.generator</artifactId>
				<version>1.3.4</version>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-spring</artifactId>
				<version>1.0-groovy-2.4</version>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-core</artifactId>
				<version>1.0-groovy-2.4</version>
			</dependency>
			<dependency>
				<groupId>info.solidsoft.spock</groupId>
				<artifactId>spock-global-unroll</artifactId>
				<version>0.5.0</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-dependencies</artifactId>
				<version>${spring-cloud-contract.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-contract-verifier</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-nio</artifactId>
		</dependency>
		<dependency>
			<groupId>org.raml</groupId>
			<artifactId>raml-parser-2</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.raml</groupId>
			<artifactId>com.mulesoft.jaxrs.raml.generator</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.solidsoft.spock</groupId>
			<artifactId>spock-global-unroll</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<organization>
		<name>Spring</name>
		<url>https://spring.io/</url>
	</organization>

	<developers>
		<developer>
			<id>marcingrzejszczak</id>
			<name>Marcin Grzejszczak</name>
			<email>mgrzejszczak@pivotal.io</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/spring-cloud-incubator/spring-cloud-contract-raml.git</connection>
		<developerConnection>scm:git:git@github.com:spring-cloud-incubator/spring-cloud-contract-raml.git</developerConnection>
		<url>https://github.com/spring-cloud-incubator/spring-cloud-contract-raml</url>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/spring-cloud-incubator/spring-cloud-contract-raml/issues</url>
	</issueManagement>

	<ciManagement>
		<system>CircleCi</system>
		<url>https://circleci.com/gh/spring-cloud-incubator/spring-cloud-contract-raml</url>
	</ciManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<includes>
							<include>**/*Spec.*</include>
							<include>**/*Tests.*</include>
							<include>**/*Test.*</include>
						</includes>
						<reportFormat>plain</reportFormat>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.plexus</groupId>
					<artifactId>plexus-component-metadata</artifactId>
					<version>1.6</version>
				</plugin>
				<plugin>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven.plugin.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>io.takari.maven.plugins</groupId>
					<artifactId>takari-lifecycle-plugin</artifactId>
					<version>1.12.0</version>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>4.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>1.5</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>addSources</goal>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>target</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.springframework.cloud</groupId>
						<artifactId>spring-cloud-build-tools</artifactId>
						<version>${spring-cloud-build.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>checkstyle.xml</configLocation>
							<headerLocation>LICENSE.txt</headerLocation>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<excludes>${project.build.directory}/**</excludes>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<headerLocation>LICENSE.txt</headerLocation>
					<excludes>${project.build.directory}/**</excludes>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>spring</id>
			<repositories>
				<repository>
					<id>spring-snapshots</id>
					<name>Spring Snapshots</name>
					<url>https://repo.spring.io/libs-snapshot-local</url>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>false</enabled>
					</releases>
				</repository>
				<repository>
					<id>spring-milestones</id>
					<name>Spring Milestones</name>
					<url>https://repo.spring.io/libs-milestone-local</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
				<repository>
					<id>spring-releases</id>
					<name>Spring Releases</name>
					<url>https://repo.spring.io/release</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>spring-snapshots</id>
					<name>Spring Snapshots</name>
					<url>https://repo.spring.io/libs-snapshot-local</url>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>false</enabled>
					</releases>
				</pluginRepository>
				<pluginRepository>
					<id>spring-milestones</id>
					<name>Spring Milestones</name>
					<url>https://repo.spring.io/libs-milestone-local</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
				<pluginRepository>
					<id>spring-releases</id>
					<name>Spring Releases</name>
					<url>https://repo.spring.io/libs-release-local</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<id>sonar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<propertyName>surefireArgLine</propertyName>
									<destFile>${project.build.directory}/jacoco.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<dataFile>${project.build.directory}/jacoco.exec</dataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>${surefireArgLine}</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
